<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.shenyun.wuniu.dao.wuniu.mapper.FileInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.shenyun.wuniu.entity.wuniu.FileInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="biz_code" property="bizCode" jdbcType="VARCHAR" />
    <result column="url_hash" property="urlHash" jdbcType="INTEGER" />
    <result column="fastdfs_group" property="fastdfsGroup" jdbcType="VARCHAR" />
    <result column="fastdfs_name" property="fastdfsName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="scale_strategy" property="scaleStrategy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, biz_code, url_hash, fastdfs_group, fastdfs_name, `type`, `size`, scale_strategy, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.shenyun.wuniu.entity.wuniu.FileInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from file_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from file_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.shenyun.wuniu.entity.wuniu.FileInfoExample" >
    delete from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.shenyun.wuniu.entity.wuniu.FileInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into file_info (biz_code, url_hash, fastdfs_group, 
      fastdfs_name, `type`, `size`, 
      scale_strategy, create_time)
    values (#{bizCode,jdbcType=VARCHAR}, #{urlHash,jdbcType=INTEGER}, #{fastdfsGroup,jdbcType=VARCHAR}, 
      #{fastdfsName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER}, 
      #{scaleStrategy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.shenyun.wuniu.entity.wuniu.FileInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bizCode != null" >
        biz_code,
      </if>
      <if test="urlHash != null" >
        url_hash,
      </if>
      <if test="fastdfsGroup != null" >
        fastdfs_group,
      </if>
      <if test="fastdfsName != null" >
        fastdfs_name,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="size != null" >
        `size`,
      </if>
      <if test="scaleStrategy != null" >
        scale_strategy,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bizCode != null" >
        #{bizCode,jdbcType=VARCHAR},
      </if>
      <if test="urlHash != null" >
        #{urlHash,jdbcType=INTEGER},
      </if>
      <if test="fastdfsGroup != null" >
        #{fastdfsGroup,jdbcType=VARCHAR},
      </if>
      <if test="fastdfsName != null" >
        #{fastdfsName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=INTEGER},
      </if>
      <if test="scaleStrategy != null" >
        #{scaleStrategy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.shenyun.wuniu.entity.wuniu.FileInfoExample" resultType="java.lang.Integer" >
    select count(*) from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update file_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bizCode != null" >
        biz_code = #{record.bizCode,jdbcType=VARCHAR},
      </if>
      <if test="record.urlHash != null" >
        url_hash = #{record.urlHash,jdbcType=INTEGER},
      </if>
      <if test="record.fastdfsGroup != null" >
        fastdfs_group = #{record.fastdfsGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.fastdfsName != null" >
        fastdfs_name = #{record.fastdfsName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        `size` = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.scaleStrategy != null" >
        scale_strategy = #{record.scaleStrategy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update file_info
    set id = #{record.id,jdbcType=INTEGER},
      biz_code = #{record.bizCode,jdbcType=VARCHAR},
      url_hash = #{record.urlHash,jdbcType=INTEGER},
      fastdfs_group = #{record.fastdfsGroup,jdbcType=VARCHAR},
      fastdfs_name = #{record.fastdfsName,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      `size` = #{record.size,jdbcType=INTEGER},
      scale_strategy = #{record.scaleStrategy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.shenyun.wuniu.entity.wuniu.FileInfo" >
    update file_info
    <set >
      <if test="bizCode != null" >
        biz_code = #{bizCode,jdbcType=VARCHAR},
      </if>
      <if test="urlHash != null" >
        url_hash = #{urlHash,jdbcType=INTEGER},
      </if>
      <if test="fastdfsGroup != null" >
        fastdfs_group = #{fastdfsGroup,jdbcType=VARCHAR},
      </if>
      <if test="fastdfsName != null" >
        fastdfs_name = #{fastdfsName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        `size` = #{size,jdbcType=INTEGER},
      </if>
      <if test="scaleStrategy != null" >
        scale_strategy = #{scaleStrategy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.shenyun.wuniu.entity.wuniu.FileInfo" >
    update file_info
    set biz_code = #{bizCode,jdbcType=VARCHAR},
      url_hash = #{urlHash,jdbcType=INTEGER},
      fastdfs_group = #{fastdfsGroup,jdbcType=VARCHAR},
      fastdfs_name = #{fastdfsName,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=INTEGER},
      scale_strategy = #{scaleStrategy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>