<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"
       default-autowire="byName">
    <context:annotation-config/>

    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <!--60*10 秒不操作session过期-->
        <property name="maxInactiveIntervalInSeconds" value="600"/>
        <property name="defaultRedisSerializer">
            <bean class="org.springframework.data.redis.serializer.FastJsonRedisSerializer"></bean>
        </property>
    </bean>
    <!--redis 单机 模式的配置-->
    <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="10.16.30.45"/>
        <property name="port" value="6379"/>
        <property name="timeout" value="2000"/>
    </bean>
    <!--redis集群按照的配置方式-->
    <!--<bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<constructor-arg index="0">-->
            <!--<bean class="org.springframework.data.redis.connection.RedisClusterConfiguration">-->
                <!--<constructor-arg index="0">-->
                   <!--<set>-->
                       <!--<value>redistest1.msxf.lotest:7000</value>-->
                       <!--<value>redistest1.msxf.lotest:7001</value>-->
                       <!--<value>redistest1.msxf.lotest:7002</value>-->
                   <!--</set>-->
                <!--</constructor-arg>-->
            <!--</bean>-->
        <!--</constructor-arg>-->
        <!--<constructor-arg index="1">-->
                <!--<bean class="redis.clients.jedis.JedisPoolConfig">-->
                    <!--<property name="maxIdle" value="8" />-->
                    <!--<property name="testOnBorrow" value="false" />-->
                    <!--<property name="testOnReturn" value="false" />-->
                <!--</bean>-->
        <!--</constructor-arg>-->
    <!--</bean>-->
</beans>